
package finalfractal;

import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author ali alaghbandrad
 */
public class PanelFinalFractal extends javax.swing.JPanel {

    /**
     * Creates new form PanelFinalFractal
     */
    public PanelFinalFractal() {
        // initComponents();
    }
    
      @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); 
        Graphics2D g2d = (Graphics2D) g.create();
        int x1 = 20, y1 = 20;
        int x2 = getWidth() - 20, y2 = 20;
        int x3 = x1;
        int y3 = getHeight() - 20;
        int x4 = x2, y4 = y3;
        g2d.drawLine(x1, y1, x2, y2);
        g2d.drawLine(x1, y1, x3, y3);
        g2d.drawLine(x2, y2, x4, y4);
        g2d.drawLine(x3, y3, x4, y4);
        drawFractalSquares(g2d, x1, y1, x2, y2, x3, y3, x4, y4);
    }

    void drawFractalSquares(Graphics2D g2d, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) {
        
        // 1. condition when the recurion ends
        double Length = Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));
        if (Length < 20) return;
        // 2. draw this iteration
        int lengthXmid = (x2 - x1)/2;
        int lengthYmid = (y3 - y1)/2;
        int lengthXqrtr = (x2 - x1)/4;
        int lengthYqrtr = (y3 - y1)/4; 
        int Xqrtr=x1 + lengthXqrtr;
        int Yqrtr=y1 + lengthYqrtr;
        
            // Draw inner large diamond
        g2d.drawLine(x1 + lengthXmid, y1, x1, y1 + lengthYmid);
        g2d.drawLine(x1, y1 + lengthYmid, x3 + lengthXmid, y3);
        g2d.drawLine(x3 + lengthXmid, y3, x2, y1 + lengthYmid);
        g2d.drawLine(x2, y1 + lengthYmid, x1 + lengthXmid, y1);
            // Draw inner small squares
        g2d.drawLine(Xqrtr, y1, Xqrtr, Yqrtr);
        g2d.drawLine(Xqrtr, Yqrtr, x1, Yqrtr);
        g2d.drawLine(x2 - lengthXqrtr, y1, x2 - lengthXqrtr, Yqrtr);
        g2d.drawLine(x2 - lengthXqrtr, Yqrtr, x2, Yqrtr);
        g2d.drawLine(x3, y3 - lengthYqrtr, x3 + lengthXqrtr, y3 - lengthYqrtr);
        g2d.drawLine(x3 + lengthXqrtr, y3 - lengthYqrtr, x3 + lengthXqrtr, y3);
        g2d.drawLine(x4, y4 - lengthYqrtr, x4 - lengthXqrtr, y4 - lengthYqrtr);
        g2d.drawLine(x4 - lengthXqrtr, y4 - lengthYqrtr, x4 - lengthXqrtr, y4);

        // go on to the next iteration
        drawFractalSquares(g2d, x1, y1, Xqrtr, y1, x1, Yqrtr, Xqrtr, Yqrtr);
        drawFractalSquares(g2d, x2 - lengthXqrtr, y1, x2, y2, x2 - lengthXqrtr, Yqrtr, x2, Yqrtr);
        drawFractalSquares(g2d, x3, y3 - lengthYqrtr, x3 + lengthXqrtr, y3 - lengthYqrtr, x3, y3, x3 + lengthXqrtr, y3);
        drawFractalSquares(g2d, x4 - lengthXqrtr, y4 - lengthYqrtr, x4, y4 - lengthYqrtr, x4 - lengthXqrtr, y4, x4, y4);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
